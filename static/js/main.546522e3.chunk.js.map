{"version":3,"sources":["component/GraphicDoughnut.js","component/Scroll.js","component/loaderAnimation/Loading.js","component/tweets/Tweet.js","component/tweets/Tweets.js","App.js","reportWebVitals.js","index.js"],"names":["GraphicDoughnut","metrics","dataArray","push","tweets","positive","negative","neutral","console","log","data","labels","datasets","label","backgroundColor","hoverOffset","style","width","height","Scroll","props","overflowY","children","Loading","className","Tweet","id","Tweets","filterTweets","ids","filter","value","index","map","id_str","App","useState","loading","setloading","setTweets","keyword","a","url","URLSearchParams","limit","fetch","method","headers","response","json","onSubmit","e","preventDefault","target","getTweets","then","catch","error","finally","type","placeholder","marginTop","undefined","compounds","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.546522e3.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Doughnut } from 'react-chartjs-2';\r\n\r\nexport default function GraphicDoughnut({ ...metrics }) {\r\n    let dataArray = [];\r\n\r\n    dataArray.push(metrics.tweets.positive)\r\n    dataArray.push(metrics.tweets.negative)\r\n    dataArray.push(metrics.tweets.neutral)\r\n\r\n    console.log(metrics)\r\n    const data = {\r\n        labels: [\r\n            'Positive',\r\n            'Negative',\r\n            'Neutral'\r\n        ],\r\n        datasets: [{\r\n            label: 'Sentimentos',\r\n            data: dataArray,\r\n            backgroundColor: [\r\n                'rgb(0, 255, 0)',\r\n                'rgb(255, 0, 0)',\r\n                'rgb(128, 128, 128)'\r\n            ],\r\n            hoverOffset: 5\r\n        }]\r\n    };\r\n\r\n    return (\r\n        <div style={{ width: \"400px\", height: \"400px\" }} >\r\n            <Doughnut data={data} />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{\r\n            overflowY: 'scroll',\r\n            height: '70vh',\r\n            width: '75vh',\r\n        }}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scroll;\r\n","import React from 'react'\r\nimport './loading.css'\r\n\r\nexport default function Loading() {\r\n    return (\r\n        <div className=\"loader\">\r\n            <div className=\"inner one\"></div>\r\n            <div className=\"inner two\"></div>\r\n            <div className=\"inner three\"></div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport TweetEmbed from 'react-tweet-embed';\r\n\r\nexport default function Tweet({ id }) {\r\n    return (\r\n        <TweetEmbed id={id} />\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Tweet from './Tweet'\r\n\r\nexport default function Tweets(props) {\r\n    let filterTweets = props.ids.filter((value, index) => {\r\n        return index < 20;\r\n    })\r\n\r\n    console.log(filterTweets)\r\n    return (\r\n        <>\r\n            {filterTweets.map((value) => {\r\n                return <Tweet id={value.id_str} />\r\n            })}\r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\nimport GraphicDoughnut from './component/GraphicDoughnut';\nimport Scrol from './component/Scroll'\nimport Loading from './component/loaderAnimation/Loading';\nimport Tweets from './component/tweets/Tweets';\n\nfunction App() {\n  const [loading, setloading] = useState(false);\n  const [tweets, setTweets] = useState({})\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    if (e.target[0].value === \"\") {\n      console.log(\"Empty field\");\n      return;\n    }\n\n    setloading(true);\n    getTweets(e.target[0].value)\n      .then(response => {\n        setTweets(response);\n      })\n      .catch(error => console.error(error))\n      .finally(() => {\n        setloading(false);\n      })\n  }\n\n  async function getTweets(keyword) {\n    let url = 'https://quiet-mountain-17181.herokuapp.com/api/sentiment?' + new URLSearchParams({\n      keyword: keyword, // pesquisa\n      limit: 100 //limit maximo Ã© 100\n    })\n\n    let response = await fetch(url, {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n    })\n\n    return response.json();\n  }\n\n  function result() {\n    if (!loading && tweets.tweets !== undefined) {\n      return (\n        <>\n          <div className=\"fl w-100 w-50-ns pa2\">\n            <GraphicDoughnut tweets={tweets.compounds} />\n          </div>\n          <div className=\"fl w-100 w-50-ns pa2\">\n            <Scrol>\n              <Tweets ids={tweets.tweets} />\n            </Scrol>\n          </div>\n        </>\n      )\n    }\n\n    return (\n      <>\n        {loading && <Loading />}\n      </>\n    );\n  }\n\n  return (\n    <div className=\"tc bg-white ma0 pa4 min-vh-100\">\n      <section className=\"garamond\">\n        <div className=\"navy georgia ma0 grow\">\n          <h2 className=\"f2\">Sentiment analysis on Twitter</h2>\n        </div>\n        <div className=\"pa2\">\n          <form onSubmit={handleSubmit}>\n            <input\n              className=\"pa3 bb br3 grow b--none bg-lightest-blue ma3\"\n              type=\"search\"\n              placeholder=\"Search Coins\"\n            />\n            <button className=\"pa3 link bb br3 grow b--none bg-lightest-blue \">Search</button>\n          </form>\n        </div>\n      </section>\n      <div style={{ marginTop: '30px' }} className=\"mw9 center ph3-ns\">\n        <div className=\"cf ph2-ns\">\n          {result()}\n        </div>\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}